<Project Sdk="Microsoft.NET.Sdk">


    <!--
Compatible TargetFrameworks
net5.0-windows10.0.17763.0
net5.0-windows10.0.18362.0
net5.0-windows10.0.19041.0
-->

    <PropertyGroup>
        <TargetFramework>net5.0-windows10.0.19041.0</TargetFramework>
        <Platforms>x64</Platforms>
    </PropertyGroup>

    <PropertyGroup>
        <!-- https://github.com/microsoft/CsWinRT/blob/master/nuget/readme.md#customizing -->
        <CsWinRTComponent>true</CsWinRTComponent>
        <CsWinRTWindowsMetadata>10.0.19041.0</CsWinRTWindowsMetadata>

        <!-- Create a log.txt in .\obj\x64\Debug\net5.0-windows10.0.19041.0\Generated Files -->
        <CsWinRTEnableLogging>true</CsWinRTEnableLogging>
    </PropertyGroup>

    <PropertyGroup>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <GenerateNuspecDependsOn>$(GenerateNuspecDependsOn);SetPackageVersion</GenerateNuspecDependsOn>
        <PackageOutputPath>..\nuget</PackageOutputPath>

        <PackageId>ManagedComponent</PackageId>
        <Version>1.0.0</Version>
        <Authors>Raffaele Rialdi</Authors>
        <Company>Raf Enterprises</Company>
        <PackageTags>Interoperability;.NET;WinRT</PackageTags>
        <Description>
            This project compiles to a WinRT component that can be consumed from other languages
            on the Windows platform.
            The WinRT ABI guarantees the interoperability and also host the CLR whenever it is
            instantiated from any non-NET environment
        </Description>
    </PropertyGroup>

    <Target Name="SetPackageVersion" DependsOnTargets="Build">
        <PropertyGroup>
            <PackageVersion>$([System.DateTime]::Now.ToString("1.0.MMdd.HHmmss"))</PackageVersion>
        </PropertyGroup>
    </Target>

    <ItemGroup>
        <PackageReference Include="Microsoft.Windows.CsWinRT" Version="1.2.0" />
    </ItemGroup>

    <Target Name="PostBuild" AfterTargets="PostBuildEvent">
      <Exec Command="@echo &quot;copying artifacts to Rust .windows folders&quot;&#xD;&#xA;xcopy /y $(TargetPath) $(SolutionDir)NativeToManaged\RustClientConsole\.windows\x64\&#xD;&#xA;xcopy /y $(TargetDir)WinRT.Host.dll $(SolutionDir)NativeToManaged\RustClientConsole\.windows\x64\&#xD;&#xA;xcopy /y $(TargetDir)WinRT.Host.runtimeconfig.json $(SolutionDir)NativeToManaged\RustClientConsole\.windows\x64\&#xD;&#xA;xcopy /y $(TargetDir)WinRT.Host.Shim.dll $(SolutionDir)NativeToManaged\RustClientConsole\.windows\x64\&#xD;&#xA;xcopy /y $(TargetDir)WinRT.Runtime.dll $(SolutionDir)NativeToManaged\RustClientConsole\.windows\x64\&#xD;&#xA;xcopy /y $(TargetDir)$(TargetName).winmd $(SolutionDir)NativeToManaged\RustClientConsole\.windows\winmd\" />
    </Target>

</Project>
